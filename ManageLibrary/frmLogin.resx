<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAYAAAA5ZDbSAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACw0AAAsNAe0HwCwAABZbSURBVHhe7V0JdJRVli7X1JZK
        CIRUZStC9hVCIEslAR1npulux9PONGOrbXdPt9oqTZBFRFEjYUcioIgsYlgiSMjCIllBGrRBXEA4NKCy
        icomgbBkhXDnu6+qkkoIdCWpVFUqP+e8Uwn56/3v3e/d/b73ZDLpn0QBiQISBSQKSBSQKCBRQKKARAGJ
        AhIFbkmB1DLtL4d+oluYWuITLZHJhSgwtNwv1FCmXZ1WoaNhn/qSoURbayjXzkgu9fdyoWn2vKkkFntp
        DOW6LEOp7kr6330pZZOWUjZoyVCso6HbfSm1THcitcL3zz2PMi4w49RS7R8A4JGhO8CxAJSBTdlo0fA7
        /k4MfFqZ9pPUCp/7XGDarj+F1ApdGjh2W/o2cGh5G8Bagmz6OX2rTjwLwFcaigOCXZ9K3XCGKVu1eujZ
        ZYIrP4Y4bgPI2/2f4SOtUWyX6i5BP782LM9b3Q3J4HpDTl7rrwDXToSFXMkAMVDtBbfpeQv9bCjVfgOu
        fsz1KNaNZpRWrh1hKNMdEJxXYp04thb8NIhsFvOQChWp5X2TuxFZuv9QIUIHQxRvZlHMro+1oHXkOX6H
        oUR3A4AvSiz28+/+1HPiGaSX9NGllmvfghF1nblLuD3t1LXtfp7Ftkk/Q2z/jPePj8qLuteJydT9hjZs
        m+zutDJdBvTsaaFnNxv92XaD1ZnFwG4V1IDJf94HCfJw96OkE444vcTn1xCPX5osXPsD28aiYLXArhU4
        eqOhzHegE5LN+YeUUuYTAys2P22LjrjZlVut4XSoB+Frl2rrMc43Md6+zk9VJxhh8k5/r9Ry31ngjrqm
        8KI1BHfEM6yfoS6M0kX7U2qZz0gZye50AjI65xDSy3VPIhFwUoQXHaFnO7pIWD+XNunn3Wml2uHOSWEH
        jSqlzO/fYLT8gzmWI1F2N6A6Cmxb+plVCnQ0/PO1SeXaSAeR1Dlem1zqHQL9tYqDCmlb2x9edDq9bAac
        9TMv1lJtNaJsU4dt8/B0DorbaRTDtnmr08p9MyHWLgs925nwog25z6YLxhz2ZHVTqjtmKPP5k53I69jX
        GCp0j2Nlfyv82bbSeM4KWEfHZZGWxILenlKmHepYBLro7emlvgbo1y1NabyOEqwbf68pLVmuy0kv8wnq
        IlLbt1vooEBEoJZg9d7oSBrPpmLTCRZHU9izRFeFZMmkhI06pX0RsdHbhheHuKWV+UyAOD7flMazd3jR
        CQBtc4Gyfm4Ke2oPGSp8HrER2e3TDQLy/w1xvL8r0niuxtEiLYmMFRihLL3UJ9E+CHXwLcklukFwezal
        w+Xp6jSeSwHNbpUAWdcIxlhoKO/t20EIuuZrSVv6+qBwbR6iUNfslsazUvwmbehLg4o8KbZARdEFcorK
        d6PofDl+V1J8kYYSN3g7R5y7RdhTdxaFBmMTFifc0zWIWdlrwmLZPYZi7bOI2pxyWBrvFkAnFPUSYCZu
        6EMPVwymUTtH0OQ9I2nm1+Np6t7RNO6z39PvPk6ntE1+AviBhe4A2sfxYFuGPct1e1M3a39pJRy2fyyp
        yKcfADZme5zAgDJs1NGQ9b0FsL8ui6V5B16lz8/9nc7W/EQ1165Q/fVautZYTw3X66j22lW6UHeODlz4
        kpZ/O48e2zbMxNUexP04gwrgIn0suu+A3B22R8+KHuOXekUmF/rcEIkBK0VmVz3HoMQVqgQ4C/85lU5V
        f0/XGxuouuEKXaz7mSprz9L52jMtGgN8peESQG+gqvpKKjy+XCwMFuFdNc729MsGWGKhAPhuK+Cw/SMJ
        Ob0jkot8Gp0BYBazI7ak0Nfnd1Hjjet0qf7CTYC2Btjy9wtYBLwgfrp6nMZ89qiQAsnQ3+0BxNbPmgD+
        tkcDzBzLHPfn7cPpTPUPVAcxfL729E3gMgdX1Z+nSw0XqKqhkirrbubon/E95ujaa9U0be/zRpAdqJd7
        PMAMLlvDj2xNpbPVP1I19CyDZOZM/vkSwLxG9VTTeIVOXf6ejlYeph+qjtHlhovi/69er2qxGPg7LK5Z
        X0/64ikBcoqDdHKPB3jwei9K3+RP+yu/AOfWtACXObaB6ujHS8dpySdz6Q85D9L9c6MpeXYQDc2OoN8u
        vp9mlb5CB07vEUBfrP+56fsM8uX6i3Sh9hw9unUodLvaIaK6xwMcDe5adihb6FxLzmXjicHN37OS0rLD
        yD9LRiHz7qWYpRoakAOfeJmGwhbIyX+ajGKne1N2xet05VoVXb52kX6uMUoA7o+5eOfpLTS4yIuSHOAv
        92iA44s86OHyIXQegFTVnW8Ss0bOraX526ZRYNZdFLVERckFJiuf66jRDKbPlCItDVjhSb5TZfTcmt8J
        0cz62dL4Ypfqxd1/ohgYcbY2ov5Vfz0aYNaNSw/OFpavmXv58xo4d82X75F+xp00aI0XwIRPe6sCeQYb
        xQZJBT7kP1tGkzaNpPobbKQ1u1O116vp01PllFDYCwaXfa3qHgswhxdTN/jRgfNfCavXDMhlWMjHKr+h
        lHf6UdxqDcCzMmABkBMLvSn0TTlVHN5IdTeqm/pkcc+6+JGKVBqI0Oa/4jpb/r3HAjywyJ1+v+V+iOZK
        EY0yA8zG0rwdWRS8+E7rwTUFaHgxRKx0oyfzfyOiXpaBERbTU74YbfcASI8FmP3eSbueFkaQGdxKAM26
        +H/zEHLMg9XbgX1LHOZMzvGng2f3CYPL3HdDYx19cPhdis5TSBxsSxF1q76i1rnRvD2vUQPiymYQOIBx
        pPIgDV3dn4Zs6N0xIDb5UMxKNZV+V0h1jc1iug56uOx4IQ1Yp7Fr4KNncjA4M3qtnBbtmwmA65oAZjdn
        35nPKflDX0rc2MEUIPqOWq2gdQdzqL6xWTrUXL9K20+W0KA8+xpaPRrgxV/PagHw1WuX6Oszuyklr3MA
        R3+opLxDy1oBfIV2nCylhLVedrWkJYAtOJgB3ncWAK/rHMAxAHjd4fclgDk35ZBskklEt8XBEsA2zhhK
        AHdtHlwS0ZKItjHLtupO4mCJgzvmj1qU/3BVJOd8uWKDP2MLlRSYK6O3v5oi6qvMfjAbWXvP7KLY1WqK
        KnAzPtvehr71q2S05uDiFhZ6LdykbSc2U3ju3SLpwP3GFCjEz0PW9+myGi6XFtGczOd8b8L6XqiAfJzW
        HHmX1p9YSYUnltPaI0tp79ldKMtpzvxw3dXJy0ep8OgK1FbliPqqdjf0nXfkPTp4fo/ILJkXz0VEyI5W
        HaL8I++LPnkc+ceW0ZS9GTR0U4CoyOyKQj2XBtgcjfro+zWiKI65lUOT3DjAwRUZ5tytOX/LcWnzMx39
        5L554bTumxcQBz+axoD4NOeh91XupofKBooaa1tH8VwaYBaDyw5nE/9rqyLydgV09vxbY+N12nlmCyWu
        90ZRgG3TiS4LMIvm/9wcDpF7BKUz7auOtCe4/C5efFxj/dcdD9m8tMdlAea862Pl992UDrQ3eNa+j5Me
        WbsziJMgthTTrgswjJbHSroPwGwfZO0aTVF5EsBWrXC2Sh8tHibyu5YJfWs56lbPceUk53m5PrqzfVl+
        nwGevBMcLAFsXWDAlgBznRYDy1WW56pP0aGz++kHlNLWozDPsoqyM4BLALdz35KtADYWvmMnAyTB3K1T
        6IG5cTRoBvbhvhFKEwqephMXv6PqxsstXKKOAC0B7CCAjZvLqmhU3hOkRW105CIVDVzRi2Le05DvDBkN
        X5hAJ6uOwqfunKUuAewggOtv1NC6vctJP+cOSizoa6yHRgWl+MR214D5Mnq1eBQ1tCqVbS8XSwA7BOCz
        2M5STRkfPU4RuffefJcDgI7P96DhuQPozJUfhZ5uL7BN1ZySkWWdcWX2IW2hgzkAcRU100+W/BfF5qva
        rLIcvMGLHlgXDl38bYu4dnuBljjYIRx8BrFj1DPvHk0ReXe3mQzgDeOPld1cXy0BbMoLd1U+2BYczCBx
        CnHPuZ2UWOQtslKWGR+OG4cD+LXfLTHtKW65+789IEsc7CAOZpB4Wymn+FJx2Ir5RB3e1M3x7jf2TcQR
        D5c7ncyQAHYgwOwq8Y79J7Y+YDpJB/uQcPLO0I16On7pG3D55TZPBJA4uAurKm0lohkkTtwfhxH17/nh
        gmvZkEvGDoaBqz3oY1RpcLVGe8Bs61mJgx3IwdXg0N0/bqeED/pQknn7J/zgyFw3WrlvAXzg5t0RHQVa
        AtiBANc31lDRoVyKzlU2u0oM8Bo3mvbJOAng29VlOrsVzRzJHDp/92SK+ODeFgDHrFPSMyUPS0ZWtwcY
        vvD4rX+ksDV3iZ2B7B7x+VdxOLvywYJBOALiDFKSHY9i8SKSRLQDRTTvDFx/ZFWTL8x7gNnYGlCgpje+
        mohol+Qm3ZKJu4OIZg7jjBKfSbnjdAl9eqYcn6X0xbkdIvHPG8c7alxJseh2cq4tY9GtQWOQa1Acx8cz
        cLNFgEMC2IkA7iyX3u77kg5uJ9DGQMd9dKnVIStdCVJn+hZFdzulojurCu5YTHNi4BcFMThb8mSLLSSd
        AaErv8vx7pHlI4hdL6ls1hpuRigxMgdHKex7X+xs6EpwOtM313xxMd/+U19S4nKcLIAYt2sB/EHvCJwU
        Z/vzohFpis/zJMPCIPrs+HZAfEMcTsYnxjpLq71xFeNqpB+rTtCIFfdR1Aql8VQ9axawNc+gpCgdl1ym
        bNY67rzowGfd+g94r3etuDEE9wDZ8lh/JlZMjjsNnO1D04on0tbDm2nXsW30j6MfO7ztxDh2fFdOi7dn
        033zoylsodyYa+7A2Vy3ulcJdzviAmrQ4B2v/Q470l/3hDzQ90n51ZBMdxqS1xfXnuM+Qj4+0Eb3NzDR
        4ld5Ub9Zd1HIFCWFT9GguTtB01DoFDXpp9+FCk1c5rHBRuDyhRxglLQtvhS/og8Fvawm7V/c9nTtNv7b
        9K7LkAcGjFJU+z0jJ7+/yililodYxekYoFiZtgAa/SWv12IBedPgD52nDcFYkgpxS4v55FprxO6tnuEr
        dcAYzCCJ+X2JGQaMQ/6j5BSQIXcwwBmK6sDnFeT/N4UYFACn2IVe4qJn3jxlK5AFIfkaWmdpNgKWGSG9
        wnjFbuQcDzAK6Pi0kY6B40BXRwKsHSfX+2co6hjggAxj8x+pIN1f5NTvBRUNWtlHcLOt9bPNDJnOcF1n
        vwuuTQMT4KY4ilvkBdopScdcC0Yx05IB9suQsw52zL+AkQpfDKam34vKpkGZB8dimzk65HV3IXaM+tlG
        YruzxHXk91nP4t7kdNw1lZALPfuiWjCE/3PNwAoajlZQv0mg6yj5545B1/jWO/Sj5SkBYxRb9BNwOApW
        nBlg8Qkx4/sU9PMzCorM9mST3yiObKWfHQlUe9/NepbtEyz0pMK+FJqlERzLjNCCZqCb/gXQcixE9POK
        nIBRbsGOBLjp3f7Pyx8PHKP4Vj8RgxtjATRWIosdnkzgaCXFLYF+hljCRYy20c/tJbS9nzcZmmlY2Hzj
        edRcT/J71rjwmQGYUy1FsmCUMYrt/mPkw5wCWMtB9H6ht3vgWHlmwFjFZQYanG2cAOtoNsRGygXQQS+p
        KWG1t3AHDJtdGGjTPYR8EyviBQCO9awbrGMTTZg2aMyt/V4CvcYqjvmPUf6f0wHbekB+GfeG6scpVukn
        YOAmjmauNje/54yiKWy6hpLW+whDzLwhzFUMKF64PC927YJfVcMyBrB/gxSzoIMA9mVw7Hh4ImMV0/Wj
        PTydHlzLAQaOdXsAIudTNhb0MMQCx5raOKMY93vWqH+i38auA3bwEb3p1vrZpGdZMiWhPCh8JtweGE/s
        WYi587xNNGCO5cWvf0GxVj9aHdmtgG092MDxyqcA9PdBr6lI6JjxxqZHC4DYYp3UbwL27i7vLS6W7pZu
        Fbs9wrbQUszCXlBJmBfAFaCa5ivmDFCDXlVR4ATl55j/8G4NrOXgfUe699a/qJqFVVsblGkEmq1F8Wk0
        LMgPKz1kMoc9TfrZhmHPLhP95vAiFmY8/P6gl1RiHgyseW48T+bW/q+r+PMn/UTFc7JM2Z0uA67lRPxf
        UsVA7xT0fw0TBkezDy0aCCD8aTbIYHhEvukhdiCw9emUYtscXoQ4HoLN5aFT3YXxJPSqxXyagJ2kbIBY
        nhvyktrbJYFtPamgicoHg15RfBU8RUX9IbKCoJPMjYkiHH1wtnCrOOxZBqBtEdvurJtk4fakfORDUfM9
        jYYTgLWcA/8cDI4Nnoz5vaLcqH9ZObBHANtiksNkdwPcDHDzmZDpaiPQk0ztFRZnKsHRwZlqGrS6j7hp
        nKNADgPa5PawHz9gmZcQx+z6BL2MMWO85rH3hwri+QS9ptwf/Ir6Nz0P2FYz1mcqtf1fV7+N1X49dAaA
        huhmsMUni3G2NmGghM/WoL65r9F/5uS6vTiaxTHcHn5vwod9kLpEqhA6loE1j5HHGwxgQ2di/K8rzwdn
        KseHjJK59XhwLQnQP1MxOCRLVcxECgUHMMGEmOOGn4WeRotZiLBnMVutXayfzW4P7ADeERGZrRGGUxB8
        V8tx8c+hs9QAHuPMUi0KyVT4S8DehgIh09S/DZ2q/Gd4NgMNcZfV3JiYDDJ/xq8whT1tXE0iJINweyAp
        SrQUu9iT9agANgQ61XI8YTNVFPYGwJ2mrAieLE+RgLWSAv5jZIqQmeqJoTNVFyLmGjk6ZCqIa2oMMBM8
        fBbcqnU2DHua3J5UdntyewtxLIDFIgu1eD9LmYh57hDJqm+wCB+1clrSY60pEDlFrg+brV4WDi5hgoZB
        RzPY/BnGoANo1n/RCyzcKtM5WO3yfU1uD7tlfBNpBMQxcy0DzO9pei+AjXwL45itvoT2alSmt1pCzQYU
        CJupTgubo/448m13Yo4Og85raiA6A806cEAO7gxGNMlqt8rs9rA+34y7C9/1EOKf+8I7W7yHgY14U03h
        c9QrgqdrQmwwLamLmzj6TeUTAPhI9CIj0MzZTY0NHYhS/j3hQ1PY83ZulXB7UHFSpsURh15GfQ9gw2e3
        7DdyvjtFLeT3qT4Jz1bdL6HSxRQIme+lAdGz0K5GL9ZQ5FwQP5u5y9jCZ0M3Ql+y2Gbrl+PbLdwqs9uD
        /x+8rg+iZvw8g9rcB/fHwMYs0VDEfPcT4Nwnu3haUvetKRA+1z0cInt19LsaimGgoaMtG3Mii9m4ZXCr
        ShD2RDSMgWY9y+d1sDgOm6GiiDnQq5bfZWBxYGnUAvcaiOWZUdkaL4n6DqRAzNua/wDIu2JzjEBHQVdG
        QVeLBrAiILIjoTtZbBuEOO4lxHgE3LAWz+L5WAAbsxR9vOOeH7lAFe3AaUmvbkWBO2IWaZ4BwD8MWOlB
        +Jmi32luUW8ZRTkvABbj0Qvwt4XNf49d6kH8vejFHl/GvOv+K4m6TkqBhMXqPtFLNHPAiXUDVgFoABrD
        IhyAx6INyMH/mX7nz1jo2IEfeFDsUs1p6NtRshGyu5x0atKwLCkQs9QzLnaZpohB5sZAxkH0xoNLYwE6
        ADUC+77mGtr8mHkqH4mC3ZACse95PhS3XLM3fq0nDQTQg3LxiRa/2pPiVnh8FPu+x6BuOC1pyJYUSHha
        dg/065j4XI9zSaVeFLfS40Bcjsf/SFRyMQrE53rqh2zw/KN/tkzhYlOTpiNRQKKARAGJAhIFJApIFJAo
        YE8K/D/mrO9CBnoROwAAAABJRU5ErkJggg==
</value>
  </data>
</root>