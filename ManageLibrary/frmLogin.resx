<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EGAvRKL/B+as70LwqyXuAAAAAElFTkSuQmCC
</value>
  </data>
</root>